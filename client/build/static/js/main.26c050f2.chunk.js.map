{"version":3,"sources":["services/apiConfig.js","components/shared/Nav.jsx","components/shared/Footer.jsx","components/shared/Layout.jsx","components/Home.jsx","components/Product.jsx","components/Search.jsx","components/Sort.js","services/product.js","components/Products.jsx","components/ProductCreate.jsx","components/ProductEdit.jsx","components/ProductDetail.jsx","services/user.js","components/SignUp.jsx","components/SignIn.jsx","components/SignOut.jsx","App.jsx","serviceWorker.js","index.js"],"names":["apiUrl","authenticatedOptions","className","to","unauthenticatedOptions","alwaysOptions","Nav","user","email","Footer","Layout","props","children","Home","Product","_id","title","src","imgURL","alt","name","text","Search","onSubmit","e","value","onChange","placeholder","type","autoFocus","compareKey","key","a","b","ZA","arr","sort","reverse","lowestFirst","parseInt","price","highestFirst","jsonWebToken","localStorage","getItem","console","log","apiUrls","window","location","hostname","api","axios","create","baseURL","headers","Authorization","getProducts","get","response","data","getProduct","id","createProduct","product","post","updateProduct","put","deleteProduct","delete","Products","handleSearchChange","event","setState","filterValue","target","filteredProducts","state","products","filter","toLowerCase","includes","handleSortChange","selectValue","input","handleSubmit","preventDefault","this","PRODUCTS","map","index","htmlFor","Component","ProductCreate","handleChange","created","required","rows","ProductEdit","match","params","updated","description","cols","ProductDetail","onClick","signUp","credentials","resp","setItem","token","signIn","signOut","clear","verifyUser","res","SignUp","onSignUp","history","setUser","then","push","catch","error","password","passwordConfirmation","isError","errorMsg","renderError","toggleForm","username","SignIn","onSignIn","SignOut","clearUser","finally","App","exact","path","render","Boolean","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"0bAKIA,E,6HCDEC,EACF,oCACI,kBAAC,IAAD,CAASC,UAAU,OAAOC,GAAG,gBAA7B,eACA,kBAAC,IAAD,CAASD,UAAU,OAAOC,GAAG,aAA7B,aAIFC,EACF,oCACI,kBAAC,IAAD,CAASF,UAAU,OAAOC,GAAG,YAA7B,WACA,kBAAC,IAAD,CAASD,UAAU,OAAOC,GAAG,YAA7B,YAIFE,EACF,oCACI,kBAAC,IAAD,CAASH,UAAU,OAAOC,GAAG,aAA7B,aAmBOG,EAfH,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACP,OACI,6BACI,yBAAKL,UAAU,OACX,kBAAC,IAAD,CAASA,UAAU,OAAOC,GAAG,KAA7B,eACA,yBAAKD,UAAU,SACVK,GAAQ,yBAAKL,UAAU,gBAAf,YAAwCK,EAAKC,OACrDH,EACAE,EAAON,EAAuBG,MC1BxCK,G,MAHA,kBACX,mCCWWC,EAVA,SAACC,GAAD,OACX,yBAAKT,UAAU,UACX,kBAAC,EAAD,CAAKK,KAAMI,EAAMJ,OACjB,yBAAKL,UAAU,mBACVS,EAAMC,UAEX,kBAAC,EAAD,QCEOC,EATF,SAACF,GACZ,OACE,kBAAC,EAAD,CAAQJ,KAAMI,EAAMJ,MAClB,yBAAKL,UAAU,WCWNY,G,YAdC,SAACH,GACb,OACI,oCACI,kBAAC,IAAD,CAAMT,UAAU,UAAUC,GAAE,oBAAeQ,EAAMI,MAC7C,yBAAKb,UAAU,gBAAgBS,EAAMK,OAC3C,yBAAKd,UAAU,gBAAgBe,IAAKN,EAAMO,OAAQC,IAAKR,EAAMS,OAC7D,yBAAKlB,UAAU,gBAAgBS,EAAMU,UCShCC,G,MAhBA,SAACX,GACZ,OACI,0BAAMT,UAAU,cAAcqB,SAAU,SAACC,GAAD,OAAOb,EAAMY,SAASC,KAC1D,2BACItB,UAAU,eACVuB,MAAOd,EAAMc,MACbC,SAAU,SAACF,GAAD,OAAOb,EAAMe,SAASF,IAChCJ,KAAK,SACLO,YAAY,SACZC,KAAK,OACLC,WAAS,OCbnBC,EAAa,SAAAC,GAAG,OACpB,SAACC,EAAGC,GACF,OAAID,EAAED,GAAOE,EAAEF,IACL,EAENC,EAAED,GAAOE,EAAEF,GACN,EAEF,IAOEG,EAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKN,EAAW,SAASO,WACzCC,EAAc,SAAAH,GAAG,OAAIA,EAAIC,MAAK,SAACJ,EAAGC,GAAJ,OAAUM,SAASP,EAAEQ,OAASD,SAASN,EAAEO,WACvEC,EAAe,SAAAN,GAAG,OAAIA,EAAIC,MAAK,SAACJ,EAAGC,GAAJ,OAAUM,SAASN,EAAEO,OAASD,SAASP,EAAEQ,W,iBPf/EE,EAAeC,aAAaC,QAAQ,UAAY,KACtDC,QAAQC,IAAI,QAASJ,GAIrB,IAAMK,EACQ,6CADRA,EAES,4BAIb/C,EAD+B,cAA7BgD,OAAOC,SAASC,SACTH,EAEAA,EAGX,IAQeI,EARHC,IAAMC,OAAO,CACvBC,QAAStD,EACTuD,QAAS,CACPC,cAAc,UAAD,OAAYd,GACzB,8BAA+B,OQpBtBe,EAAW,uCAAG,4BAAAzB,EAAA,+EAEEmB,EAAIO,IAAI,aAFV,cAEfC,EAFe,yBAGdA,EAASC,MAHK,oGAAH,qDASXC,EAAU,uCAAG,WAAMC,GAAN,eAAA9B,EAAA,+EAEGmB,EAAIO,IAAJ,oBAAqBI,IAFxB,cAEdH,EAFc,yBAGbA,EAASC,MAHI,oGAAH,sDASVG,EAAa,uCAAG,WAAMC,GAAN,eAAAhC,EAAA,+EAEAmB,EAAIc,KAAK,YAAaD,GAFtB,cAEjBL,EAFiB,yBAGhBA,EAASC,MAHO,oGAAH,sDASbM,EAAa,uCAAG,WAAOJ,EAAIE,GAAX,eAAAhC,EAAA,+EAEAmB,EAAIgB,IAAJ,oBAAqBL,GAAME,GAF3B,cAEjBL,EAFiB,yBAGhBA,EAASC,MAHO,oGAAH,wDASbQ,EAAa,uCAAG,WAAMN,GAAN,eAAA9B,EAAA,+EAEAmB,EAAIkB,OAAJ,oBAAwBP,IAFxB,cAEjBH,EAFiB,yBAGhBA,EAASC,MAHO,oGAAH,sDCsDXU,E,kDAnFb,aAAe,IAAD,8BACZ,gBAcFC,mBAAqB,SAAAC,GAOnB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOlD,QAN3B,WACb,IAAMmD,EAAmB,EAAKC,MAAMC,SAASC,QAAO,SAAAf,GAClD,OAAOA,EAAQ5C,KAAK4D,cAAcC,SAAS,EAAKJ,MAAMH,YAAYM,kBAEpE,EAAKP,SAAS,CAAEG,yBApBN,EAyBdM,iBAAmB,SAAAV,GACjB,EAAKC,SAAS,CAAEU,YAAaX,EAAMG,OAAOlD,QAC1C,IFtBcU,EEsBViD,EAAQZ,EAAMG,OAAOlD,MACjBqD,EAAa,EAAKD,MAAlBC,SACR,OAAQM,GACN,IAAK,iBACH,EAAKX,SAAS,CACZK,UF3BQ3C,EE2BK2C,EF3BE3C,EAAIC,KAAKN,EAAW,YE6BrC,MACF,IAAK,kBACH,EAAK2C,SAAS,CACZK,SAAU5C,EAAG4C,KAEf,MACF,IAAK,kBACH,EAAKL,SAAS,CACZK,SAAUxC,EAAYwC,KAExB,MACF,IAAK,mBACH,EAAKL,SAAS,CACZK,SAAUrC,EAAaqC,OA/CjB,EAuDdO,aAAe,SAAAb,GAAK,OAAIA,EAAMc,kBArD5B,EAAKT,MAAQ,CACXC,SAAU,GACVJ,YAAa,GACbE,iBAAkB,KAClBO,YAAa,YANH,E,gMAWW1B,I,OAAjBqB,E,OACNS,KAAKd,SAAS,CAAEK,a,qIA8ChB,IACMU,GADWD,KAAKV,MAAMD,iBAAmBW,KAAKV,MAAMD,iBAAmBW,KAAKV,MAAMC,UAC9DW,KAAI,SAACzB,EAAS0B,GAAV,OAC5B,kBAAC,EAAD,CAAS3E,IAAKiD,EAAQjD,IAAKC,MAAOgD,EAAQhD,MAAOE,OAAQ8C,EAAQ9C,OAAQG,KAAM2C,EAAQ3C,KAAMU,IAAK2D,OAGpG,OACE,kBAAC,EAAD,CAAQnF,KAAMgF,KAAK5E,MAAMJ,MACvB,kBAAC,EAAD,CAAQgB,SAAUgE,KAAKF,aAAc5D,MAAO8D,KAAKV,MAAMH,YAAahD,SAAU6D,KAAKhB,qBACnF,0BAAMrE,UAAU,iBAAiBqB,SAAUgE,KAAKF,cAC9C,2BAAOM,QAAQ,QAAf,YACA,4BAAQzF,UAAU,OAAOuB,MAAO8D,KAAKV,MAAMM,YAAazD,SAAU6D,KAAKL,kBACrE,4BAAQhF,UAAU,SAASuB,MAAM,kBAAjC,iCACA,4BAAQA,MAAM,mBAAd,iCACA,4BAAQA,MAAM,mBAAd,gCACA,4BAAQA,MAAM,oBAAd,kCAGJ,yBAAKvB,UAAU,YACZsF,Q,GA7EYI,a,+BCuERC,E,kDAxEX,aAAe,IAAD,8BACV,gBAYJC,aAAe,SAACtB,GAAW,IAAD,EACEA,EAAMG,OAAtBvD,EADc,EACdA,KAAMK,EADQ,EACRA,MACd,EAAKgD,SAAS,CACVT,QAAQ,eACD,EAAKa,MAAMb,QADX,eAEF5C,EAAOK,OAlBN,EAuBd4D,aAvBc,uCAuBC,WAAOb,GAAP,eAAAxC,EAAA,6DACXwC,EAAMc,iBADK,SAEWvB,EAAc,EAAKc,MAAMb,SAFpC,OAEL+B,EAFK,OAGX,EAAKtB,SAAS,CAAEsB,YAHL,2CAvBD,sDAEV,EAAKlB,MAAQ,CACTb,QAAS,CACLhD,MAAO,GACPE,OAAQ,GACRG,KAAM,IAGV0E,SAAS,GATH,E,qDA6BJ,IAAD,EACwBR,KAAKV,MAA1Bb,EADH,EACGA,QAER,OAHK,EACY+B,QAGN,kBAAC,IAAD,CAAU5F,GAAE,cAGnB,kBAAC,EAAD,CAAQI,KAAMgF,KAAK5E,MAAMJ,MACrB,0BAAML,UAAU,cAAcqB,SAAUgE,KAAKF,cACzC,2BACInF,UAAU,aACVyB,YAAY,QACZF,MAAOuC,EAAQhD,MACfI,KAAK,OACL4E,UAAQ,EACRnE,WAAS,EACTH,SAAU6D,KAAKO,eAGnB,8BACI5F,UAAU,uBACV+F,KAAM,GACNtE,YAAY,OACZF,MAAOuC,EAAQ3C,KACfD,KAAK,cACL4E,UAAQ,EACRtE,SAAU6D,KAAKO,eAEnB,2BACI5F,UAAU,mBACVyB,YAAY,aACZF,MAAOuC,EAAQ9C,OACfE,KAAK,SACL4E,UAAQ,EACRtE,SAAU6D,KAAKO,eAEnB,4BAAQlE,KAAK,SAAS1B,UAAU,iBAAhC,gB,GAlEQ0F,aC2FbM,G,wDA1FX,WAAYvF,GAAQ,IAAD,8BACf,cAAMA,IAmBVmF,aAAe,SAACtB,GAAW,IAAD,EACEA,EAAMG,OAAtBvD,EADc,EACdA,KAAMK,EADQ,EACRA,MACd,EAAKgD,SAAS,CACVT,QAAQ,eACD,EAAKa,MAAMb,QADX,eAEF5C,EAAOK,OAzBD,EA8BnB4D,aA9BmB,uCA8BJ,WAAOb,GAAP,iBAAAxC,EAAA,6DACXwC,EAAMc,iBACAxB,EAAO,EAAKnD,MAAMwF,MAAMC,OAAxBtC,GAFK,SAGWI,EAAcJ,EAAI,EAAKe,MAAMb,SAHxC,OAGLqC,EAHK,OAIX,EAAK5B,SAAS,CAAE4B,YAJL,2CA9BI,sDAEf,EAAKxB,MAAQ,CACTb,QAAS,CACL5C,KAAM,GACNkF,YAAa,GACbpF,OAAQ,GACRsB,MAAO,IAEX6D,SAAS,GATE,E,yLAcTvC,EAAOyB,KAAK5E,MAAMwF,MAAMC,OAAxBtC,G,SACgBD,EAAWC,G,OAA3BE,E,OACNuB,KAAKd,SAAS,CAAET,Y,qIAqBV,IAAD,EAEwBuB,KAAKV,MAA1Bb,EAFH,EAEGA,QAER,OAJK,EAEYqC,QAGN,kBAAC,IAAD,CAAUlG,GAAE,oBAAeoF,KAAK5E,MAAMwF,MAAMC,OAAOtC,MAI1D,kBAAC,EAAD,CAAQvD,KAAMgF,KAAK5E,MAAMJ,MACrB,yBAAKL,UAAU,gBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,qBAAqBe,IAAK+C,EAAQ9C,OAAQC,IAAK6C,EAAQhD,QACtE,0BAAMO,SAAUgE,KAAKF,cACjB,2BACInF,UAAU,wBACVyB,YAAY,aACZF,MAAOuC,EAAQ9C,OACfE,KAAK,SACL4E,UAAQ,EACRtE,SAAU6D,KAAKO,iBAI3B,0BAAM5F,UAAU,YAAYqB,SAAUgE,KAAKF,cACvC,2BACInF,UAAU,aACVyB,YAAY,QACZF,MAAOuC,EAAQhD,MACfI,KAAK,OACL4E,UAAQ,EACRnE,WAAS,EACTH,SAAU6D,KAAKO,eAGnB,8BACI5F,UAAU,uBACV+F,KAAM,GACNM,KAAM,GACN5E,YAAY,OACZF,MAAOuC,EAAQ3C,KACfD,KAAK,cACL4E,UAAQ,EACRtE,SAAU6D,KAAKO,eAEnB,4BAAQlE,KAAK,SAAS1B,UAAU,eAAhC,e,GAnFE0F,cCuCXY,G,wDAtCX,WAAY7F,GAAQ,IAAD,8BACf,cAAMA,IACDkE,MAAQ,CACTb,QAAS,CACL5C,KAAM,GACNkF,YAAa,GACbpF,OAAQ,KAND,E,yLAYT4C,EAAOyB,KAAK5E,MAAMwF,MAAMC,OAAxBtC,G,SACgBD,EAAWC,G,OAA3BE,E,OACNuB,KAAKd,SAAS,CAAET,Y,qIAGV,IACEA,EAAYuB,KAAKV,MAAjBb,QACR,OACI,kBAAC,EAAD,CAAQzD,KAAMgF,KAAK5E,MAAMJ,MACrB,yBAAKL,UAAU,kBACX,yBAAKA,UAAU,uBAAuBe,IAAK+C,EAAQ9C,OAAQC,IAAK6C,EAAQhD,QACxE,yBAAKd,UAAU,UACX,yBAAKA,UAAU,QAAQ8D,EAAQhD,OAE/B,yBAAKd,UAAU,eAAe8D,EAAQ3C,MACtC,yBAAKnB,UAAU,oBACf,4BAAQA,UAAU,eAAc,kBAAC,IAAD,CAAMA,UAAU,YAAYC,GAAE,oBAAe6D,EAAQjD,IAAvB,UAA9B,SAC5B,4BAAQb,UAAU,gBAAgBuG,QAAS,kBAAMrC,EAAcJ,EAAQjD,OAAvE,kB,GA9BA6E,cCJfc,EAAM,uCAAG,WAAMC,GAAN,eAAA3E,EAAA,+EAEKmB,EAAIc,KAAK,WAAY0C,GAF1B,cAERC,EAFQ,OAGdjE,aAAakE,QAAQ,QAASD,EAAKhD,KAAKkD,OAH1B,kBAIPF,EAAKhD,MAJE,oGAAH,sDAUNmD,EAAM,uCAAG,WAAMJ,GAAN,eAAA3E,EAAA,+EAEKmB,EAAIc,KAAK,WAAY0C,GAF1B,cAERC,EAFQ,OAGdjE,aAAakE,QAAQ,QAASD,EAAKhD,KAAKkD,OAH1B,kBAIPF,EAAKhD,MAJE,oGAAH,sDAUNoD,EAAO,uCAAG,WAAMzG,GAAN,SAAAyB,EAAA,+EAETW,aAAasE,QAFJ,iCAGR,GAHQ,mGAAH,sDAkBPC,EAAU,uCAAG,4BAAAlF,EAAA,0DACRW,aAAaC,QAAQ,SADb,gCAGAO,EAAIO,IAAI,WAHR,cAGZyD,EAHY,yBAIXA,EAAIvD,MAJO,iCAMf,GANe,2CAAH,qDCqERwD,G,wDAxGX,aAAe,IAAD,8BACV,gBAYJtB,aAAe,SAAAtB,GAAK,aAChB,EAAKC,UAAL,mBACKD,EAAMG,OAAOvD,KAAOoD,EAAMG,OAAOlD,OADtC,yBAEa,GAFb,yBAGc,IAHd,KAdU,EAoBd4F,SAAW,SAAA7C,GACPA,EAAMc,iBADU,MAGa,EAAK3E,MAA1B2G,EAHQ,EAGRA,QAASC,EAHD,EAGCA,QAEjBb,EAAO,EAAK7B,OACP2C,MAAK,kBAAMT,EAAO,EAAKlC,UACvB2C,MAAK,SAAAL,GAAG,OAAII,EAAQJ,EAAI5G,SACxBiH,MAAK,kBAAMF,EAAQG,KAAK,QACxBC,OAAM,SAAAC,GACH9E,QAAQ8E,MAAMA,GACd,EAAKlD,SAAS,CACVjE,MAAO,GACPoH,SAAU,GACVC,qBAAsB,GACtBC,SAAS,EACTC,SAAU,gCApCZ,EAyCdC,YAAc,WACV,IAAMC,EAAa,EAAKpD,MAAMiD,QAAU,SAAW,GACnD,OAAI,EAAKjD,MAAMiD,QAEP,4BAAQlG,KAAK,SAAS1B,UAAW+H,GAC5B,EAAKpD,MAAMkD,UAIb,4BAAQnG,KAAK,UAAb,YA/CX,EAAKiD,MAAQ,CACTqD,SAAU,GACV1H,MAAO,GACPoH,SAAU,GACVC,qBAAsB,GACtBC,SAAS,EACTC,SAAU,IATJ,E,qDAsDJ,IAAD,EACuDxC,KAAKV,MAAzDrE,EADH,EACGA,MAAO0H,EADV,EACUA,SAAUN,EADpB,EACoBA,SAAUC,EAD9B,EAC8BA,qBAEnC,OACI,yBAAK3H,UAAU,kBACX,uCACA,0BAAMqB,SAAUgE,KAAK8B,UACjB,2CACA,2BACIrB,UAAQ,EACRpE,KAAK,OACLR,KAAK,WACLK,MAAOyG,EACPvG,YAAY,iBACZD,SAAU6D,KAAKO,eAEnB,gDACA,2BACIE,UAAQ,EACRpE,KAAK,QACLR,KAAK,QACLK,MAAOjB,EACPmB,YAAY,cACZD,SAAU6D,KAAKO,eAEnB,2CACA,2BACIE,UAAQ,EACR5E,KAAK,WACLK,MAAOmG,EACPhG,KAAK,WACLD,YAAY,WACZD,SAAU6D,KAAKO,eAEnB,wDACA,2BACIE,UAAQ,EACR5E,KAAK,uBACLK,MAAOoG,EACPjG,KAAK,WACLD,YAAY,mBACZD,SAAU6D,KAAKO,eAElBP,KAAKyC,oB,GAlGLpC,cCuFNuC,G,wDArFX,aAAe,IAAD,8BACV,gBAUJrC,aAAe,SAAAtB,GAAU,IAAD,EACpB,EAAKC,UAAL,mBACKD,EAAMG,OAAOvD,KAAOoD,EAAMG,OAAOlD,OADtC,yBAEa,GAFb,yBAGc,IAHd,KAZU,EAmBd2G,SAAW,SAAA5D,GACPA,EAAMc,iBADU,MAGa,EAAK3E,MAA1B2G,EAHQ,EAGRA,QAASC,EAHD,EAGCA,QAEjBR,EAAO,EAAKlC,OACP2C,MAAK,SAAAL,GACFI,EAAQJ,EAAI5G,SAEfiH,MAAK,kBAAMF,EAAQG,KAAK,QACxBC,OAAM,SAAAC,GACH9E,QAAQ8E,MAAMA,GACd,EAAKlD,SAAS,CACVqD,SAAS,EACTC,SAAU,sBACVG,SAAU,GACVN,SAAU,SAnCZ,EAwCdI,YAAc,WACV,IAAMC,EAAa,EAAKpD,MAAMiD,QAAU,SAAW,GACnD,OAAI,EAAKjD,MAAMiD,QAEP,4BAAQlG,KAAK,SAAS1B,UAAW+H,GAC5B,EAAKpD,MAAMkD,UAIb,4BAAQnG,KAAK,UAAb,YA9CX,EAAKiD,MAAQ,CACTqD,SAAU,GACVN,SAAU,GACVE,SAAS,EACTC,SAAU,IAPJ,E,qDAqDJ,IAAD,EAC0BxC,KAAKV,MAA5BqD,EADH,EACGA,SAAUN,EADb,EACaA,SAElB,OACI,yBAAK1H,UAAU,kBACX,uCACA,0BAAMqB,SAAUgE,KAAK6C,UACjB,2CACA,2BACIpC,UAAQ,EACRpE,KAAK,OACLR,KAAK,WACLK,MAAOyG,EACPvG,YAAY,iBACZD,SAAU6D,KAAKO,eAEnB,2CACA,2BACIE,UAAQ,EACR5E,KAAK,WACLK,MAAOmG,EACPhG,KAAK,WACLD,YAAY,WACZD,SAAU6D,KAAKO,eAElBP,KAAKyC,oB,GA/ELpC,cCWNyC,E,kLAZU,IAAD,EACqB9C,KAAK5E,MAAlC2G,EADQ,EACRA,QAASgB,EADD,EACCA,UAAW/H,EADZ,EACYA,KAC5ByG,EAAQzG,GACHiH,MAAK,kBAAMc,OACXC,SAAQ,kBAAMjB,EAAQG,KAAK,U,+BAIhC,MAAO,O,GATO7B,aCiDP4C,G,kDAtCb,aAAe,IAAD,8BACZ,gBAaFjB,QAAU,SAAAhH,GAAI,OAAI,EAAKkE,SAAS,CAAElE,UAdpB,EAgBd+H,UAAY,kBAAM,EAAK7D,SAAS,CAAElE,KAAM,QAdtC,EAAKsE,MAAQ,CACXtE,KAAM,MAHI,E,gMAQO2G,I,QAAb3G,E,SAEJgF,KAAKd,SAAS,CAAElE,S,qIAQV,IACAgH,EAAuBhC,KAAvBgC,QAASe,EAAc/C,KAAd+C,UACT/H,EAASgF,KAAKV,MAAdtE,KACR,OACE,yBAAKL,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuI,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,EAAD,CAAMpI,KAAMA,OAChD,kBAAC,IAAD,CAAOkI,OAAK,EAACC,KAAK,WAAWC,OAAQ,SAAAhI,GAAK,OAAI,kBAAC,EAAD,CAAQ4G,QAASA,EAASD,QAAS3G,EAAM2G,aACvF,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,WAAWC,OAAQ,SAAAhI,GAAK,OAAI,kBAAC,EAAD,CAAQ4G,QAASA,EAASD,QAAS3G,EAAM2G,aACvF,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,YAAYC,OAAQ,SAAAhI,GAAK,OAAI,kBAAC,EAAD,CAASJ,KAAMA,EAAM+H,UAAWA,EAAWhB,QAAS3G,EAAM2G,aACzG,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,EAAD,CAAUpI,KAAMA,OAC5D,kBAAC,IAAD,CAAQkI,OAAK,EAACC,KAAK,eAAeC,OAAQ,kBAAMpI,EAAO,kBAAC,EAAD,CAAeA,KAAMA,IAAW,kBAAC,IAAD,CAAUJ,GAAG,eACpG,kBAAC,IAAD,CAAQsI,OAAK,EAACC,KAAK,qBAAqBC,OAAQ,SAAChI,GAAD,OAAWJ,EAAO,kBAAC,EAAD,iBAAkBI,EAAlB,CAA0BJ,KAAMA,KAAW,kBAAC,IAAD,CAAUJ,GAAG,SAC1H,kBAAC,IAAD,CAAOsI,OAAK,EAACC,KAAK,gBAAgBC,OAAQ,SAAChI,GAAD,OAAW,kBAAC,EAAD,iBAAoBA,EAApB,CAA4B2G,QAAS3G,EAAM2G,QAAS/G,KAAMA,c,GAhCvGqF,aCDEgD,QACW,cAA7B5F,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASiD,MACvB,2DCXN0C,IAASF,OAAO,kBAAC,IAAD,KAAQ,kBAAC,GAAD,OAAkBG,SAASC,eAAe,SD4H5D,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1B,MAAK,SAAA2B,GACJA,EAAaC,gBAEd1B,OAAM,SAAAC,GACL9E,QAAQ8E,MAAMA,EAAM0B,c","file":"static/js/main.26c050f2.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst jsonWebToken = localStorage.getItem('token') || null\nconsole.log(\"JWT: \", jsonWebToken)\n\nlet apiUrl\n\nconst apiUrls = {\n  production: 'https://tech-blogger-app.herokuapp.com/api',\n  development: 'http://localhost:3000/api'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nconst api = axios.create({\n  baseURL: apiUrl,\n  headers: {\n    Authorization: `Bearer ${jsonWebToken}`,\n    'Access-Control-Allow-Origin': '*'\n  }\n})\n\nexport default api","import React from 'react'\nimport './Nav.css'\nimport { NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n    <>\n        <NavLink className=\"link\" to=\"/add-product\">Add Product</NavLink>\n        <NavLink className=\"link\" to=\"/sign-out\">Sign Out</NavLink>\n    </>\n)\n\nconst unauthenticatedOptions = (\n    <>\n        <NavLink className=\"link\" to=\"/sign-up\">Sign Up</NavLink>\n        <NavLink className=\"link\" to=\"/sign-in\">Sign In</NavLink>\n    </>\n)\n\nconst alwaysOptions = (\n    <>\n        <NavLink className=\"link\" to=\"/products\">Products</NavLink>\n    </>\n)\n\nconst Nav = ({ user }) => {\n        return (\n            <nav>\n                <div className=\"nav\">\n                    <NavLink className=\"logo\" to=\"/\">ProductsApp</NavLink>\n                    <div className=\"links\">\n                        {user && <div className=\"link welcome\">Welcome, {user.email}</div>}\n                        {alwaysOptions}\n                        {user ? authenticatedOptions : unauthenticatedOptions}\n                    </div>\n                </div>\n            </nav>\n        )\n}\n\nexport default Nav","import React from 'react'\nimport './Footer.css'\n\nconst Footer = () =>\n    <footer></footer>\n\nexport default Footer","import React from 'react'\nimport './Layout.css'\nimport Nav from './Nav'\nimport Footer from './Footer'\n\nconst Layout = (props) => (\n    <div className='layout'>\n        <Nav user={props.user} />\n        <div className=\"layout-children\">\n            {props.children}\n        </div>\n        <Footer />\n    </div>\n)\n\nexport default Layout","import React from 'react'\nimport './Home.css'\nimport Layout from './shared/Layout'\n\nconst Home = (props) => {\n  return (\n    <Layout user={props.user}>\n      <div className=\"home\">\n      </div>\n    </Layout>\n  )\n}\n\nexport default Home","import React from 'react';\nimport './Product.css';\nimport { Link } from 'react-router-dom'\n\nconst Product = (props) => {\n    return (\n        <>\n            <Link className=\"product\" to={`/products/${props._id}`}>\n                <div className=\"product-name\">{props.title}</div>\n          <img className=\"product-image\" src={props.imgURL} alt={props.name} />\n          <div className=\"product-name\">{props.text}</div>\n          \n               \n            </Link>\n        </>\n    )\n}\n\nexport default Product","import React from 'react'\nimport './Search.css'\n\nconst Search = (props) => {\n    return (\n        <form className=\"search-form\" onSubmit={(e) => props.onSubmit(e)}>\n            <input\n                className=\"search-input\"\n                value={props.value}\n                onChange={(e) => props.onChange(e)}\n                name=\"Search\"\n                placeholder=\"Search\"\n                type=\"text\"\n                autoFocus\n            />\n        </form>\n    )\n}\n\nexport default Search","const compareKey = key =>\n  (a, b) => {\n    if (a[key] < b[key]) {\n      return -1\n    }\n    if (a[key] > b[key]) {\n      return 1\n    }\n    return 0\n  }\n\n// one liner\n// const compareKey = key => (a, b) => a[key] == b[key]? (a[key] < b[key] ? -1 : 1) : 0\n\nexport const AZ = arr => arr.sort(compareKey('name'))\nexport const ZA = arr => arr.sort(compareKey('name')).reverse()\nexport const lowestFirst = arr => arr.sort((a, b) => parseInt(a.price) - parseInt(b.price))\nexport const highestFirst = arr => arr.sort((a, b) => parseInt(b.price) - parseInt(a.price))","import api from './apiConfig'\n\nexport const getProducts = async () => {\n  try {\n      const response = await api.get('/products')\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}\n\nexport const getProduct = async id => {\n  try {\n      const response = await api.get(`/products/${id}`)\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}\n\nexport const createProduct = async product => {\n  try {\n      const response = await api.post('/products', product)\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}\n\nexport const updateProduct = async (id, product) => {\n  try {\n      const response = await api.put(`/products/${id}`, product)\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}\n\nexport const deleteProduct = async id => {\n  try {\n      const response = await api.delete(`/products/${id}`)\n      return response.data\n  } catch (error) {\n      throw error\n  }\n}","import React, { Component } from 'react'\nimport './Products.css'\nimport Product from './Product'\nimport Search from './Search'\nimport { AZ, ZA, lowestFirst, highestFirst } from \"./Sort\"\nimport Layout from './shared/Layout'\nimport { getProducts } from '../services/product'\n\nclass Products extends Component {\n  constructor() {\n    super()\n    this.state = {\n      products: [],\n      filterValue: '',\n      filteredProducts: null,\n      selectValue: 'Featured'\n    }\n  }\n\n  async componentDidMount() {\n    const products = await getProducts()\n    this.setState({ products })\n  }\n\n  handleSearchChange = event => {\n    const filter = () => {\n      const filteredProducts = this.state.products.filter(product => {\n        return product.name.toLowerCase().includes(this.state.filterValue.toLowerCase())\n      })\n      this.setState({ filteredProducts })\n    }\n    this.setState({ filterValue: event.target.value }, filter)\n  }\n\n  handleSortChange = event => {\n    this.setState({ selectValue: event.target.value });\n    let input = event.target.value; // a-z\n    const { products } = this.state;\n    switch (input) {\n      case \"name-ascending\":\n        this.setState({\n          products: AZ(products)\n        });\n        break;\n      case \"name-descending\":\n        this.setState({\n          products: ZA(products)\n        });\n        break;\n      case \"price-ascending\":\n        this.setState({\n          products: lowestFirst(products)\n        });\n        break;\n      case \"price-descending\":\n        this.setState({\n          products: highestFirst(products)\n        });\n        break;\n      default:\n        break\n    }\n  }\n\n  handleSubmit = event => event.preventDefault()\n\n  render() {\n    const products = this.state.filteredProducts ? this.state.filteredProducts : this.state.products\n    const PRODUCTS = products.map((product, index) =>\n      <Product _id={product._id} title={product.title} imgURL={product.imgURL} text={product.text} key={index} />\n    )\n\n    return (\n      <Layout user={this.props.user}>\n        <Search onSubmit={this.handleSubmit} value={this.state.filterValue} onChange={this.handleSearchChange} />\n        <form className=\"sort-container\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"sort\">SORT BY:</label>\n          <select className=\"sort\" value={this.state.selectValue} onChange={this.handleSortChange}>\n            <option className=\"option\" value=\"name-ascending\" >&nbsp; Alphabetically, A-Z &nbsp;</option>\n            <option value=\"name-descending\">&nbsp; Alphabetically, Z-A &nbsp;</option>\n            <option value=\"price-ascending\">&nbsp; Price, low to high &nbsp;</option>\n            <option value=\"price-descending\">&nbsp; Price, high to low &nbsp;</option>\n          </select>\n        </form>\n        <div className=\"products\">\n          {PRODUCTS}\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default Products","import React, { Component } from 'react'\nimport './ProductCreate.css'\nimport Layout from './shared/Layout'\nimport { Redirect } from 'react-router-dom'\nimport { createProduct } from '../services/product'\n\nclass ProductCreate extends Component {\n    constructor() {\n        super()\n        this.state = {\n            product: {\n                title: '',\n                imgURL: '',\n                text: '',\n               \n            },\n            created: false\n        }\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            product: {\n                ...this.state.product,\n                [name]: value\n            }\n        })\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault()\n        const created = await createProduct(this.state.product)\n        this.setState({ created })\n    }\n\n    render() {\n        const { product, created } = this.state\n\n        if (created) {\n            return <Redirect to={`/products`} />\n        }\n        return (\n            <Layout user={this.props.user}>\n                <form className=\"create-form\" onSubmit={this.handleSubmit}>\n                    <input\n                        className=\"input-name\"\n                        placeholder='Title'\n                        value={product.title}\n                        name='name'\n                        required\n                        autoFocus\n                        onChange={this.handleChange}\n                    />\n                   \n                    <textarea\n                        className=\"textarea-description\"\n                        rows={10}\n                        placeholder='Post'\n                        value={product.text}\n                        name='description'\n                        required\n                        onChange={this.handleChange}\n                    />\n                    <input\n                        className=\"input-image-link\"\n                        placeholder='Image Link'\n                        value={product.imgURL}\n                        name='imgURL'\n                        required\n                        onChange={this.handleChange}\n                    />\n                    <button type='submit' className=\"submit-button\">Submit</button>\n                </form>\n            </Layout>\n        )\n    }\n}\n\nexport default ProductCreate","import React, { Component } from 'react'\nimport './ProductEdit.css'\nimport { Redirect } from 'react-router-dom'\nimport Layout from './shared/Layout'\nimport { getProduct, updateProduct } from '../services/product'\n\nclass ProductEdit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            product: {\n                name: '',\n                description: '',\n                imgURL: '',\n                price: ''\n            },\n            updated: false\n        }\n    }\n\n    async componentDidMount() {\n        let { id } = this.props.match.params\n        const product = await getProduct(id)\n        this.setState({ product })\n    }\n\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            product: {\n                ...this.state.product,\n                [name]: value\n            }\n        })\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault()\n        let { id } = this.props.match.params\n        const updated = await updateProduct(id, this.state.product)\n        this.setState({ updated })\n    }\n\n    render() {\n\n        const { product, updated } = this.state\n\n        if (updated) {\n            return <Redirect to={`/products/${this.props.match.params.id}`} />\n        }\n\n        return (\n            <Layout user={this.props.user}>\n                <div className=\"product-edit\">\n                    <div className=\"image-container\">\n                        <img className=\"edit-product-image\" src={product.imgURL} alt={product.title} />\n                        <form onSubmit={this.handleSubmit}>\n                            <input\n                                className=\"edit-input-image-link\"\n                                placeholder='Image Link'\n                                value={product.imgURL}\n                                name='imgURL'\n                                required\n                                onChange={this.handleChange}\n                            />\n                        </form>\n                    </div>\n                    <form className=\"edit-form\" onSubmit={this.handleSubmit}>\n                        <input\n                            className=\"input-name\"\n                            placeholder='Title'\n                            value={product.title}\n                            name='name'\n                            required\n                            autoFocus\n                            onChange={this.handleChange}\n                        />\n                       \n                        <textarea\n                            className=\"textarea-description\"\n                            rows={10}\n                            cols={78}\n                            placeholder='Post'\n                            value={product.text}\n                            name='description'\n                            required\n                            onChange={this.handleChange}\n                        />\n                        <button type='submit' className=\"save-button\">Save</button>\n                    </form>\n                </div>\n            </Layout>\n        )\n    }\n}\n\nexport default ProductEdit","import React, { Component } from 'react'\nimport './ProductDetail.css'\nimport Layout from './shared/Layout'\nimport { getProduct, deleteProduct } from '../services/product'\nimport { Link } from 'react-router-dom'\n\nclass ProductDetail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            product: {\n                name: '',\n                description: '',\n                imgURL: ''\n            }\n        }\n    }\n\n    async componentDidMount() {\n        let { id } = this.props.match.params\n        const product = await getProduct(id)\n        this.setState({ product })\n    }\n\n    render() {\n        const { product } = this.state\n        return (\n            <Layout user={this.props.user}>\n                <div className=\"product-detail\">\n                    <img className=\"product-detail-image\" src={product.imgURL} alt={product.title} />\n                    <div className=\"detail\">\n                        <div className=\"name\">{product.title}</div>\n                        \n                        <div className=\"description\">{product.text}</div>\n                        <div className=\"button-container\">\n                        <button className=\"edit-button\"><Link className=\"edit-link\" to={`/products/${product._id}/edit`}>Edit</Link></button>\n                            <button className=\"delete-button\" onClick={() => deleteProduct(product._id)}>Delete</button>\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\n\nexport default ProductDetail\n","import api from './apiConfig'\n\nexport const signUp = async credentials => {\n    try {\n        const resp = await api.post('/sign-up', credentials)\n        localStorage.setItem('token', resp.data.token)\n        return resp.data\n    } catch (error) {\n        throw error\n    }\n}\n\nexport const signIn = async credentials => {\n    try {\n        const resp = await api.post('/sign-in', credentials)\n        localStorage.setItem('token', resp.data.token)\n        return resp.data\n    } catch (error) {\n        throw error\n    }\n}\n\nexport const signOut = async user => {\n    try {\n        await localStorage.clear()\n        return true\n    } catch (error) {\n        throw error\n    }\n}\n\nexport const changePassword = async (passwords, user) => {\n    try {\n        const resp = await api.post('/')\n        return resp.data\n    } catch (error) {\n        throw error\n    }\n}\n\nexport const verifyUser = async () => {\n    const token = localStorage.getItem('token')\n    if (token) {\n        const res = await api.get('/verify')\n        return res.data\n    }\n    return false\n}","import React, { Component } from 'react'\nimport './SignUp.css'\nimport { signUp, signIn } from '../services/user'\n\nclass SignUp extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            passwordConfirmation: '',\n            isError: false,\n            errorMsg: ''\n        }\n    }\n\n    handleChange = event =>\n        this.setState({\n            [event.target.name]: event.target.value,\n            isError: false,\n            errorMsg: ''\n        })\n\n    onSignUp = event => {\n        event.preventDefault()\n\n        const { history, setUser } = this.props\n\n        signUp(this.state)\n            .then(() => signIn(this.state))\n            .then(res => setUser(res.user))\n            .then(() => history.push('/'))\n            .catch(error => {\n                console.error(error)\n                this.setState({\n                    email: '',\n                    password: '',\n                    passwordConfirmation: '',\n                    isError: true,\n                    errorMsg: 'Sign Up Details Invalid'\n                })\n            })\n    }\n\n    renderError = () => {\n        const toggleForm = this.state.isError ? 'danger' : ''\n        if (this.state.isError) {\n            return (\n                <button type=\"submit\" className={toggleForm}>\n                    {this.state.errorMsg}\n                </button>\n            )\n        } else {\n            return <button type=\"submit\">Sign Up</button>\n        }\n    }\n\n    render() {\n        const { email, username, password, passwordConfirmation } = this.state\n\n        return (\n            <div className=\"form-container\">\n                <h3>Sign Up</h3>\n                <form onSubmit={this.onSignUp}>\n                    <label>Username</label>\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"username\"\n                        value={username}\n                        placeholder=\"Enter username\"\n                        onChange={this.handleChange}\n                    />\n                    <label>Email address</label>\n                    <input\n                        required\n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                        placeholder=\"Enter email\"\n                        onChange={this.handleChange}\n                    />\n                    <label>Password</label>\n                    <input\n                        required\n                        name=\"password\"\n                        value={password}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={this.handleChange}\n                    />\n                    <label>Password Confirmation</label>\n                    <input\n                        required\n                        name=\"passwordConfirmation\"\n                        value={passwordConfirmation}\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        onChange={this.handleChange}\n                    />\n                    {this.renderError()}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SignUp","\nimport React, { Component } from 'react'\nimport './SignIn.css'\nimport { signIn } from '../services/user'\n\nclass SignIn extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            username: '',\n            password: '',\n            isError: false,\n            errorMsg: ''\n        }\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            isError: false,\n            errorMsg: ''\n        })\n    }\n\n    onSignIn = event => {\n        event.preventDefault()\n\n        const { history, setUser } = this.props\n\n        signIn(this.state)\n            .then(res => {\n                setUser(res.user)\n            })\n            .then(() => history.push('/'))\n            .catch(error => {\n                console.error(error)\n                this.setState({\n                    isError: true,\n                    errorMsg: 'Invalid Credentials',\n                    username: '',\n                    password: ''\n                })\n            })\n    }\n\n    renderError = () => {\n        const toggleForm = this.state.isError ? 'danger' : ''\n        if (this.state.isError) {\n            return (\n                <button type=\"submit\" className={toggleForm}>\n                    {this.state.errorMsg}\n                </button>\n            )\n        } else {\n            return <button type=\"submit\">Sign In</button>\n        }\n    }\n\n    render() {\n        const { username, password } = this.state\n\n        return (\n            <div className=\"form-container\">\n                <h3>Sign In</h3>\n                <form onSubmit={this.onSignIn}>\n                    <label>Username</label>\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"username\"\n                        value={username}\n                        placeholder=\"Enter Username\"\n                        onChange={this.handleChange}\n                    />\n                    <label>Password</label>\n                    <input\n                        required\n                        name=\"password\"\n                        value={password}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={this.handleChange}\n                    />\n                    {this.renderError()}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SignIn","import { Component } from 'react'\nimport { signOut } from '../services/user'\n\nclass SignOut extends Component {\n    componentDidMount() {\n        const { history, clearUser, user } = this.props\n        signOut(user)\n            .then(() => clearUser())\n            .finally(() => history.push('/'))\n    }\n\n    render() {\n        return ''\n    }\n}\n\nexport default SignOut","import React, { Component } from 'react'\nimport './App.css'\nimport Home from './components/Home'\nimport Products from './components/Products'\nimport ProductCreate from './components/ProductCreate'\nimport ProductEdit from './components/ProductEdit'\nimport ProductDetail from './components/ProductDetail'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { verifyUser } from './services/user'\nimport SignUp from './components/SignUp'\nimport SignIn from './components/SignIn'\nimport SignOut from './components/SignOut'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      user: null\n    }\n  }\n\n  async componentDidMount() {\n    const user = await verifyUser()\n    if (user) {\n      this.setState({ user })\n    }\n  }\n\n  setUser = user => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  render() {\n    const { setUser, clearUser } = this\n    const { user } = this.state\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home user={user} />} />\n          <Route exact path=\"/sign-up\" render={props => <SignUp setUser={setUser} history={props.history} />} />\n          <Route exact path=\"/sign-in\" render={props => <SignIn setUser={setUser} history={props.history} />} />\n          <Route exact path=\"/sign-out\" render={props => <SignOut user={user} clearUser={clearUser} history={props.history} />} />\n          <Route exact path=\"/products\" render={() => <Products user={user} />} />\n          <Route  exact path=\"/add-product\" render={() => user ? <ProductCreate user={user} /> : <Redirect to='/signup' />}/>\n          <Route  exact path=\"/products/:id/edit\" render={(props) => user ? <ProductEdit { ...props } user={user} /> : <Redirect to='/' />}/>\n          <Route exact path=\"/products/:id\" render={(props) => <ProductDetail { ...props } history={props.history} user={user}/>} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}